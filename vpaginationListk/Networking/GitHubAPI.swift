//
//  GitHubAPI.swift
//  vpaginationListk
//
//  Created by ùïÑùïíùï•ùïßùïñùï™ ‚Ñôùï†ùïïùïòùï†ùï£ùïüùïöùï™ on 05.12.2024.
//

import Foundation
import Alamofire

class GitHubAPI {
    private let baseURL = "https://api.github.com/search/repositories"
    
    func fetchRepos(page: Int) async throws -> [Repo] {
        let url = "\(baseURL)?q=swift&sort=stars&order=asc&page=\(page)&per_page=10"
        
        // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        let token = Secrets.token
        
        // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å —Ç–æ–∫–µ–Ω–æ–º
        let headers: HTTPHeaders = [
            "Authorization": "token \(token)"
        ]
        
        // –ó–∞–ø—Ä–æ—Å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Alamofire
        let response = await AF.request(url, headers: headers)
            .validate(statusCode: 200..<300)
            .serializingDecodable(GitHubAPIResponse.self)
            .response
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É –≤ –æ—Ç–≤–µ—Ç–µ
        guard let result = response.value else {
            throw response.error ?? NSError(domain: "API", code: 0, userInfo: nil)
        }
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
        return result.items
    }
}
