//
//  UD.swift
//  vpaginationListk
//
//  Created by ùïÑùïíùï•ùïßùïñùï™ ‚Ñôùï†ùïïùïòùï†ùï£ùïüùïöùï™ on 05.12.2024.
//

import Foundation

class UserDefaultsManager {
    
    private let reposKey = "reposKey"
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ UserDefaults
    func saveRepos(repos: [Repo]) {
        let encoder = JSONEncoder()
        if let encoded = try? encoder.encode(repos) {
            UserDefaults.standard.set(encoded, forKey: reposKey)
        }
    }
    
    // –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ UserDefaults
    func getRepos() -> [Repo]? {
        if let savedRepos = UserDefaults.standard.data(forKey: reposKey) {
            let decoder = JSONDecoder()
            if let loadedRepos = try? decoder.decode([Repo].self, from: savedRepos) {
                return loadedRepos
            }
        }
        return nil
    }
    
    // –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    func clearRepos() {
        UserDefaults.standard.removeObject(forKey: reposKey)
    }
    
    // –£–¥–∞–ª–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ id
    func removeRepo(id: Int) {
        var repos = getRepos() ?? []
        repos.removeAll { $0.id == id }
        saveRepos(repos: repos)
    }
    
    // –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    func updateRepo(updatedRepo: Repo) {
        var repos = getRepos() ?? []
        if let index = repos.firstIndex(where: { $0.id == updatedRepo.id }) {
            repos[index] = updatedRepo
            saveRepos(repos: repos)
        }
    }
}
